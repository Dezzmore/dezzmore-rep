import requests
import youtube_dl
from bs4 import BeautifulSoup
from telegram import Video, ParseMode
from telegram.ext import Updater, CommandHandler, MessageHandler, Filters

# функция загрузки видео
def download_video(url):
    ydl_opts = {
        'outtmpl': '%(title)s.%(ext)s',
        'format': 'mp4',
    }
    with youtube_dl.YoutubeDL(ydl_opts) as ydl:
        ydl.download([url])
    video_file = max([f for f in os.listdir('.') if f.endswith('.mp4')], key=os.path.getctime)
    return video_file

# получение HTML-кода страницы с видео и описания видео
def get_video_data(url):
    response = requests.get(url)
    soup = BeautifulSoup(response.content, 'html.parser')
    title = soup.find('div', class_='content-heading').text.strip()
    description = soup.find('div', class_='video-description').text.strip()
    video_url = soup.find('div', class_='video-player').find('video').find('source').get('src')
    return title, description, video_url

# обработчик команды /video
def video_handler(update, context):
    url = update.message.text.split(' ')[1]
    title, description, video_url = get_video_data(url)
    video_file = download_video(video_url)
    with open(video_file, 'rb') as f:
        update.message.reply_video(video=f, caption=f'<b>{title}</b>\n\n{description}', parse_mode=ParseMode.HTML)
    os.remove(video_file)

# обработчик текстовых сообщений
def text_handler(update, context):
    update.message.reply_text('Я не знаю, что ответить на это сообщение.')

# создание и запуск бота
updater = Updater('YOUR_API_KEY', use_context=True)
updater.dispatcher.add_handler(CommandHandler('video', video_handler))
updater.dispatcher.add_handler(MessageHandler(Filters.text, text_handler))
updater.start_polling()
updater.idle()
